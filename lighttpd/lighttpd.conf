
server.modules += ( 
    "mod_fastcgi",
    "mod_rewrite", 
    "mod_access",
    "mod_setenv" # for setting Access-Control-Allow-Origin
 )

include "/etc/lighttpd/mime.conf"

# http://serverfault.com/questions/240038/lighttpd-broken-when-serving-from-virtualbox-shared-folder
server.network-backend = "writev"

server.port = 80

server.document-root = "/var/www/"

# "The server has to be started as root to take control of port 80"
# Then it will switch to this user
server.username = "lighttpd" 
server.groupname = "www-data"

index-file.names = ( "index.php", "index.html", "index.htm" )
static-file.exclude-extensions = (".php", ".pl", ".cgi", ".fcgi")

fastcgi.debug = 1
fastcgi.server = (
  ".php" => (( 
    "host" => env.PHP_FASTCGI_IP,
    "port" => "9000",
    "docroot" => "/var/www/"
  ))
)

# Permissions ====================================================================
$HTTP["url"] =~ "/\." {
    # block all files/directories that start with .
    url.access-deny = ( "" )
} 
else $HTTP["url"] == "/" {
    # allow /
    url.access-allow = ( "" )
}
else $HTTP["url"] =~ "^/server/" {
    # /server/.htaccess
    setenv.add-response-header = ( "Access-Control-Allow-Origin" => "*" )
} 
else $HTTP["url"] =~ "^/lib/javascript/" {
    # /lib/javascript/.htaccess allow all
    url.access-allow = ( "" )
}
else $HTTP["url"] =~ "^/(lib|modules)/" { # must come second for proper matching
    # /lib|modules/.htaccess allow these
    url.access-allow = ( 
        ".css", ".js", ".png", ".gif", ".jpg", ".swf", ".ttf", ".json", ".xml", ".htc", ".map", ".woff"
    )
}
else $HTTP["url"] =~ "^/templates/" {
    # /templates/.htaccess allow these
    url.access-allow = ( 
        ".css", ".gif"
    )
} 
else $HTTP["url"] =~ "^/[^/]+$" {
    # root directory
    url.access-allow = ( ".php", "favicon.ico" )
}

# Note:
# url.access-deny = ( ".x" )
# url.access-allow = ( ".x" )
# or
# url.access-allow = ( ".x" )
# url.access-deny = ( ".x" )
# = only allow .x

# =================================================================================

# Apache RewriteRule flags make no sense to me. Here is my best guess.

# All captures that need to carry over the qsa generally do not end with $
# They will end with searching for anything that is not ?
# ${url.query} is then appended to the replacement

# Here we compromise on appending the qsa to an existing query
# We will always add a '&' then copy any more optional queries
# I would like to make it cleaner and not leave that trailing & if there is no qsa
# But that doubles or triples the number of rules

url.rewrite-if-not-file = (
    # /daap/.htaccess  --------------------------------------------------------
    # if not file or dir
    # RewriteRule ^      ( .  +)$     /index.php?action=$1             [PT,L,QSA]
                 "^/daap/([^?]+)" => "/index.php?action=$1&${url.query}",
                 #       |  1  |
    # -------------------------------------------------------------------------

    # /plex/.htaccess  --------------------------------------------------------
    # if not file or dir
    # RewriteRule ^      (  . +)$     /index.php?action=$1             [PT,L,QSA]
                 "^/plex/([^?]+)" => "/index.php?action=$1&${url.query}",
                 #       |  1  |
    # -------------------------------------------------------------------------

    # /channel/.htaccess  -----------------------------------------------------
    # if not file or dir
    # RewriteRule ^         ([0-9]+)/( .  *)$     /channel/index.php?channel=$1&target=$2             [PT,L,QSA]
                 "^/channel/([0-9]+)/([^?]*)" => "/channel/index.php?channel=$1&target=$2&${url.query}",
                 #          |  1   | |  2  |
    # -------------------------------------------------------------------------

    # /rest/.htaccess  --------------------------------------------------------
    # if not file or dir
    # RewriteRule ^      (  .  +)\.view $          /rest/index.php?ssaction=$1             [PT,L,QSA]
                 "^/rest/([^\.]+)\.view($|\?)" => "/rest/index.php?ssaction=$1&${url.query}",
                 #       |  1   |     
                 #       The original .+ would devour the .view so the result would always be ?ssaction=stuff.view

    # RewriteRule ^      fake/( .  +)$      /play/$1 [PT,L,QSA]
                 "^/rest/fake/([^?]+)"  => "/play/$1{qsa}",
                 #            |  1  |               can use the handy {qsa} because we aren't appending any existing query
                 #    Capture up to a ?
    # -------------------------------------------------------------------------

    # /play/.htaccess  --------------------------------------------------------
    # if not file or dir
    # RewriteRule ^      art/([^/]+)/([^/]+)/([0-9]+)/thumb([0-9]*)\.([a-z]+) $               /image.php?object_type=$2&object_id=$3&auth=$1&thumb=$4&name=art.jpg [L]
                 "^/play/art/([^/]+)/([^/]+)/([0-9]+)/thumb([0-9]*)\.([a-z]+)($|\?)" => "/play/image.php?object_type=$2&object_id=$3&auth=$1&thumb=$4&name=art.jpg"
                 #           |  1  | |  2  | |  3   |      |  4   |  |  5   |
    # More /play rules below
)

url.rewrite-repeat-if-not-file = (
    # if not file or dir
    # RewriteRule ^      ([^/]+)/([^/]+)/([^/]+)/([^/ ]+)(/  . *)?$      /play/$5?$1=$2&$3=$4             [N,QSA]
                 "^/play/([^/]+)/([^/]+)/([^/]+)/([^/?]+)(/[^?]*)?"  => "/play/$5?$1=$2&$3=$4&${url.query}",
                 #       |  1  | |  2  | |  3  | |  4   ||  5   |
                 #                                        This regex could make a double slash "/play//..."

    # RewriteRule ^      ([^/]+)/([^/ ]+)(/  . *)?$     /play/$3?$1=$2   [N,QSA]
                 "^/play/([^/]+)/([^/?]+)(/[^?]*)?" => "/play/$3?$1=$2&{url.query}",
                 #       |  1  | |  2   ||   3  | 
                 #                       This regex could make a double slash "/play//..."

    # RewriteRule ^      (/[^/ ]+|[^/]+/|/?)$      /play/index.php      [L,QSA]
                 "^/play/(/[^/?]+|[^/]+/|/?)($|\?)" => "/play/index.php${qsa}"
                 #  /play//stuff$                                   can use the handy {qsa} because we aren't appending any existing query
                 # or
                 #  /play/stuff/$
                 # or
                 #  /play/$
                 # or
                 #  /play//$
)

#debug.log-condition-handling = "enable"
debug.log-request-header   = "enable"
debug.log-response-header  = "enable"
debug.log-request-handling = "enable"
debug.log-file-not-found   = "enable"
